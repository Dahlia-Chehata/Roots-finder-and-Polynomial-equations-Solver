function [root,iterations,IterTable,precision,time] = Secant(f,a, b,MaxIterations,eps,es)
    tic;
    x = zeros(1,MaxIterations);
    x(1)=a;
    x(2) = b;
    IterTable=zeros(0,6);
    for i=2:1:MaxIterations + 1
      fNew = eval(subs(f,x(i)));
      fOld = eval(subs(f,x(i - 1)));
      if(abs(fOld - fNew) <= eps)
          error('the denominator is equal to zero');
      else
          x(i+1) = x(i) - ((fNew * (x(i - 1) - x(i))/(fOld - fNew));
      check=double(subs(f,x(i+1)));
      if (check<=eps || abs(ea)<=es)
            root=x(i+1);
            time=toc;
            break;
      end
    end
end

function [root,iterations,IterTable,precision,time] = NewtonRaphson(f,initVal,MaxIterations,eps,es)


      g=f;
      dF=diff(g);
      dFx=eval((subs((dF),x(i))));
    if (abs(dFx)<=eps)
        error('the derivative equals zero');
    else 
        Fx=double(subs(g,x(i)));
        x(i+1)=x(i)-(Fx/dFx);
        ea= (x(i+1)-x(i))/(x(i+1))*100;
        row=[x(i),Fx,dFx,x(i+1),abs(ea)];
        IterTable=[IterTable;row];

        
        g=dF;
    end 
 end
iterations=i;
precision=double(subs(f,root));
end

